[project]
name = "rag-system-optimized"
version = "0.1.0"
description = "Optimized PDF-based RAG system with unified offline/online processing"
readme = "README.md"
authors = [
    {name = "Paul Iusztin", email = "p.b.iusztin@gmail.com"},
    {name = "Ernesto Larios", email = "elsoloscuro@hotmail.com"},
]
license = { text = "MIT" }
requires-python = ">=3.11"

dependencies = [
    # Core utilities
    "click>=8.1.3",
    "loguru>=0.7.3",
    "pydantic>=2.8.2",
    "pydantic-settings>=2.7.0",
    
    # Database & Storage
    "pymongo>=4.10.1",
    "boto3>=1.36.0",
    
    # LangChain ecosystem (unified)
    "langchain>=0.3.14",
    "langchain-mongodb>=0.4.0",
    "langchain-openai>=0.3.1",
    "langchain-core>=0.3.30",
    "langchain-huggingface>=0.1.2",
    
    # Data processing
    "datasets>=2.14.4",
    "PyPDF2>=3.0.1",
    "pdfplumber>=0.7.6",
    "crawl4ai>=0.4.247",
    "reportlab>=4.0.0",  # For creating sample PDFs
    
    # ML & AI APIs
    "google-generativeai>=0.8.3",
    "smolagents>=1.4.1",
    
    # Monitoring & Evaluation (simplified - no ZenML)
    "opik>=0.1.0",
    "comet_ml>=3.47.6",
    
    # Web UI
    "gradio>=5.12.0",
    
    # Web Interface
    "flask>=3.0.0",
    "flask-cors>=4.0.0",
    
    # Visualization
    "matplotlib>=3.10.0",
    
    # Development tools
    "ipykernel>=6.29.5",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "ruff>=0.7.2",
]

# Alternative orchestration tools (comment out ZenML)
orchestration = [
    "airflow>=2.8.0",  # More stable than ZenML
    # "prefect>=2.14.0",  # Alternative option
]

[tool.pip]
extra-index-url = "https://download.pytorch.org/whl/cpu/torch_stable.html"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/rag_system"]

[tool.ruff]
target-version = "py311"
line-length = 88
extend-select = ["E", "W", "F", "I"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
